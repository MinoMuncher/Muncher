// This file was auto-generated by ML.NET Model Builder.
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace Minomuncher
{
    public partial class TREstimator
    {
        /// <summary>
        /// model input class for TREstimator.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [LoadColumn(1)]
            [ColumnName(@"Glicko")]
            public float Glicko { get; set; }

            [LoadColumn(2)]
            [ColumnName(@"TR")]
            public float TR { get; set; }

            [LoadColumn(3)]
            [ColumnName(@"Single")]
            public float Single { get; set; }

            [LoadColumn(4)]
            [ColumnName(@"Double")]
            public float Double { get; set; }

            [LoadColumn(5)]
            [ColumnName(@"Triple")]
            public float Triple { get; set; }

            [LoadColumn(6)]
            [ColumnName(@"Quad")]
            public float Quad { get; set; }

            [LoadColumn(8)]
            [ColumnName(@"Tspin")]
            public float Tspin { get; set; }

            [LoadColumn(9)]
            [ColumnName(@"TspinSingle")]
            public float TspinSingle { get; set; }

            [LoadColumn(10)]
            [ColumnName(@"TspinDouble")]
            public float TspinDouble { get; set; }

            [LoadColumn(11)]
            [ColumnName(@"TspinTriple")]
            public float TspinTriple { get; set; }

            [LoadColumn(14)]
            [ColumnName(@"TspinMini")]
            public float TspinMini { get; set; }

            [LoadColumn(15)]
            [ColumnName(@"TspinMiniSingle")]
            public float TspinMiniSingle { get; set; }

            [LoadColumn(17)]
            [ColumnName(@"PerfectClear")]
            public float PerfectClear { get; set; }

            [LoadColumn(18)]
            [ColumnName(@"TEfficiency")]
            public float TEfficiency { get; set; }

            [LoadColumn(19)]
            [ColumnName(@"IEfficiency")]
            public float IEfficiency { get; set; }

            [LoadColumn(20)]
            [ColumnName(@"CheeseApl")]
            public float CheeseApl { get; set; }

            [LoadColumn(21)]
            [ColumnName(@"DownStackAPL")]
            public float DownStackAPL { get; set; }

            [LoadColumn(22)]
            [ColumnName(@"UpStackAPL")]
            public float UpStackAPL { get; set; }

            [LoadColumn(23)]
            [ColumnName(@"APL")]
            public float APL { get; set; }

            [LoadColumn(24)]
            [ColumnName(@"APP")]
            public float APP { get; set; }

            [LoadColumn(25)]
            [ColumnName(@"KPP")]
            public float KPP { get; set; }

            [LoadColumn(26)]
            [ColumnName(@"KPS")]
            public float KPS { get; set; }

            [LoadColumn(27)]
            [ColumnName(@"StackHeight")]
            public float StackHeight { get; set; }

            [LoadColumn(28)]
            [ColumnName(@"GarbageHeight")]
            public float GarbageHeight { get; set; }

            [LoadColumn(29)]
            [ColumnName(@"SpikeEfficiency")]
            public float SpikeEfficiency { get; set; }

            [LoadColumn(30)]
            [ColumnName(@"APM")]
            public float APM { get; set; }

            [LoadColumn(31)]
            [ColumnName(@"OpenerAPM")]
            public float OpenerAPM { get; set; }

            [LoadColumn(32)]
            [ColumnName(@"MidGameAPM")]
            public float MidGameAPM { get; set; }

            [LoadColumn(33)]
            [ColumnName(@"PPS")]
            public float PPS { get; set; }

            [LoadColumn(34)]
            [ColumnName(@"OpenerPPS")]
            public float OpenerPPS { get; set; }

            [LoadColumn(35)]
            [ColumnName(@"MidGamePPS")]
            public float MidGamePPS { get; set; }

            [LoadColumn(36)]
            [ColumnName(@"BTBChainEfficiency")]
            public float BTBChainEfficiency { get; set; }

            [LoadColumn(37)]
            [ColumnName(@"BTBChain")]
            public float BTBChain { get; set; }

            [LoadColumn(38)]
            [ColumnName(@"BTBChainAPM")]
            public float BTBChainAPM { get; set; }

            [LoadColumn(39)]
            [ColumnName(@"BTBChainAttack")]
            public float BTBChainAttack { get; set; }

            [LoadColumn(40)]
            [ColumnName(@"BTBChainAPP")]
            public float BTBChainAPP { get; set; }

            [LoadColumn(41)]
            [ColumnName(@"BTBChainEfficiency2")]
            public float BTBChainEfficiency2 { get; set; }

            [LoadColumn(42)]
            [ColumnName(@"ComboChain")]
            public float ComboChain { get; set; }

            [LoadColumn(43)]
            [ColumnName(@"ComboChainAPM")]
            public float ComboChainAPM { get; set; }

            [LoadColumn(44)]
            [ColumnName(@"ComboChainAttack")]
            public float ComboChainAttack { get; set; }

            [LoadColumn(45)]
            [ColumnName(@"ComboChainAPP")]
            public float ComboChainAPP { get; set; }

            [LoadColumn(46)]
            [ColumnName(@"AverageSpikePotential")]
            public float AverageSpikePotential { get; set; }

            [LoadColumn(47)]
            [ColumnName(@"AverageDefencePotential")]
            public float AverageDefencePotential { get; set; }

            [LoadColumn(48)]
            [ColumnName(@"BlockfishScore")]
            public float BlockfishScore { get; set; }

            [LoadColumn(49)]
            [ColumnName(@"BurstPPS")]
            public float BurstPPS { get; set; }

            [LoadColumn(50)]
            [ColumnName(@"AttackDelayRate")]
            public float AttackDelayRate { get; set; }

            [LoadColumn(51)]
            [ColumnName(@"PreAttackDelayRate")]
            public float PreAttackDelayRate { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for TREstimator.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"Glicko")]
            public float Glicko { get; set; }

            [ColumnName(@"TR")]
            public float TR { get; set; }

            [ColumnName(@"Single")]
            public float Single { get; set; }

            [ColumnName(@"Double")]
            public float Double { get; set; }

            [ColumnName(@"Triple")]
            public float Triple { get; set; }

            [ColumnName(@"Quad")]
            public float Quad { get; set; }

            [ColumnName(@"Tspin")]
            public float Tspin { get; set; }

            [ColumnName(@"TspinSingle")]
            public float TspinSingle { get; set; }

            [ColumnName(@"TspinDouble")]
            public float TspinDouble { get; set; }

            [ColumnName(@"TspinTriple")]
            public float TspinTriple { get; set; }

            [ColumnName(@"TspinMini")]
            public float TspinMini { get; set; }

            [ColumnName(@"TspinMiniSingle")]
            public float TspinMiniSingle { get; set; }

            [ColumnName(@"PerfectClear")]
            public float PerfectClear { get; set; }

            [ColumnName(@"TEfficiency")]
            public float TEfficiency { get; set; }

            [ColumnName(@"IEfficiency")]
            public float IEfficiency { get; set; }

            [ColumnName(@"CheeseApl")]
            public float CheeseApl { get; set; }

            [ColumnName(@"DownStackAPL")]
            public float DownStackAPL { get; set; }

            [ColumnName(@"UpStackAPL")]
            public float UpStackAPL { get; set; }

            [ColumnName(@"APL")]
            public float APL { get; set; }

            [ColumnName(@"APP")]
            public float APP { get; set; }

            [ColumnName(@"KPP")]
            public float KPP { get; set; }

            [ColumnName(@"KPS")]
            public float KPS { get; set; }

            [ColumnName(@"StackHeight")]
            public float StackHeight { get; set; }

            [ColumnName(@"GarbageHeight")]
            public float GarbageHeight { get; set; }

            [ColumnName(@"SpikeEfficiency")]
            public float SpikeEfficiency { get; set; }

            [ColumnName(@"APM")]
            public float APM { get; set; }

            [ColumnName(@"OpenerAPM")]
            public float OpenerAPM { get; set; }

            [ColumnName(@"MidGameAPM")]
            public float MidGameAPM { get; set; }

            [ColumnName(@"PPS")]
            public float PPS { get; set; }

            [ColumnName(@"OpenerPPS")]
            public float OpenerPPS { get; set; }

            [ColumnName(@"MidGamePPS")]
            public float MidGamePPS { get; set; }

            [ColumnName(@"BTBChainEfficiency")]
            public float BTBChainEfficiency { get; set; }

            [ColumnName(@"BTBChain")]
            public float BTBChain { get; set; }

            [ColumnName(@"BTBChainAPM")]
            public float BTBChainAPM { get; set; }

            [ColumnName(@"BTBChainAttack")]
            public float BTBChainAttack { get; set; }

            [ColumnName(@"BTBChainAPP")]
            public float BTBChainAPP { get; set; }

            [ColumnName(@"BTBChainEfficiency2")]
            public float BTBChainEfficiency2 { get; set; }

            [ColumnName(@"ComboChain")]
            public float ComboChain { get; set; }

            [ColumnName(@"ComboChainAPM")]
            public float ComboChainAPM { get; set; }

            [ColumnName(@"ComboChainAttack")]
            public float ComboChainAttack { get; set; }

            [ColumnName(@"ComboChainAPP")]
            public float ComboChainAPP { get; set; }

            [ColumnName(@"AverageSpikePotential")]
            public float AverageSpikePotential { get; set; }

            [ColumnName(@"AverageDefencePotential")]
            public float AverageDefencePotential { get; set; }

            [ColumnName(@"BlockfishScore")]
            public float BlockfishScore { get; set; }

            [ColumnName(@"BurstPPS")]
            public float BurstPPS { get; set; }

            [ColumnName(@"AttackDelayRate")]
            public float AttackDelayRate { get; set; }

            [ColumnName(@"PreAttackDelayRate")]
            public float PreAttackDelayRate { get; set; }

            [ColumnName(@"Features")]
            public float[] Features { get; set; }

            [ColumnName(@"Score")]
            public float Score { get; set; }

        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("TREstimator.mlnet");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);


        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

    }
}
